if(!window.DChart){throw new Error('未能加载dragonchart.core.js，该js必须在其他DChart框架的js加载之前被引用。\n'+'Not loaded dragonchart.core.js which must be loaded before other DChart\'s js.');}else{DChart.Const.Skins.BlackAndWhite.Points={NodeLineColor:'#ffffff',AlignlineLineColor:null}}DChart.Points=DChart.getCore().__extends({GraphType:'Points',SetDefaultOptions:function(){this._resetSharedOpions();this.innerOptions=DChart.Methods.Extend(this.originalDefaultOptions,{labelAxis:{valueType:null,content:function(a){if(this.valueType=='d'){return a.format('yyyy-MM-dd')}else if(this.valueType=='t'){return a.format('MM-dd hh:mm')}else{return a.toString()}},minvalue:null,maxvalue:null,interval:null,sort:true},node:{colors:null,nodetype:null,linecolor:null,linewidth:null,length:null,fillcolor:null},tip:{merge:false,content:function(a,b){if(b){var c='<div>';for(var i=0;i<a.length;i++){var d=this.valueType=='p'?a[i].vpercent.toFixed(2)+'%':a[i].vvalue.toString();c+=(i>0?'<br/>':'')+a[i].text+" : "+d}c+='&nbsp;</div>';return c}else{var d=this.valueType=='p'?a.vpercent.toFixed(2)+'%':a.vvalue.toString();if(this.valueType=='d'){d=a.vvalue.format('yyyy-MM-dd')}else if(this.valueType=='t'){d=a.vvalue.format('MM-dd hh:mm')}return'<div>&nbsp;'+(a.text?a.text+'：':'')+d+'&nbsp;</div>'}}},alignline:{verticalline:true,horizontalline:true,linecolor:null},scale:{drawvertical:true}});return this},Draw:function(B,C){var D=this;if(arguments.length===1){if(!DChart.Methods.IsArray(arguments[0])){C=arguments[0];B=undefined}}D.SetOptions(C);D._checkOptions();var E=D.innerOptions;if(E.labelAxis.valueType=='p'){throw new Error(DChart.Const.Language[D.Language].WrongParam+DChart.Const.Language[D.Language].LabelAxisValueTypeCannotBePercent);}D.SetData(B);D._onStart();D.tempData.recreateAssists=true;D.shapes.nodes=[];D.coordinates.nodes=[];var F=D._formatAxisData();var G=D._calculateOutersValid();var H=D._computeAxis(G);var I=D._getDrawableCoordinate();D.coordinates.draw=I;var J=D.ctx;var K=E.labelAxis.valueType;var L=F.vValueType=='p';var M=E.node.length||DChart.Methods.CapValue((H.maxX-H.minX)/100,10,6);var N=(E.node.colors&&E.node.colors.length>0?E.node.colors:null)||DChart.Const.Defaults.FillColors;D.tempData.legendColors=N;var O=function(d,f,g,h,i,j){this.index=d;this.centerX=f;this.centerY=g;this.color=j;this.isHovered=false;this.nodelength=h;this.data=i;this.click=function(e){var a=typeof this.data.click=='function'?this.data.click:(E.click||null);if(a){a(this.data,e)}};if(E.tip.show&&typeof E.tip.content=='function'){this.tip=null;this.showTip=function(){if(this.tip){this.tip.style.display='inline'}else{var a=this.centerX+M+5;var b=this.centerY-M-10;this.tip=D._createTip(E.tip.content.call(E,this.data,false),a,b);if(this.centerX+this.tip.clientWidth>H.maxX){D._changeTip(this.tip,a-5-M-this.tip.clientWidth)}var c=this;c.tip.onclick=function(e){c.click(e)}}};this.hideTip=function(){if(this.tip){this.tip.style.display='none'}}}};var P=function(x,y,a,b){var c=E.node;var d=b.nodelength||M;var e=b.nodetype||c.nodetype||'c';var f=b.nodelinecolor||c.linecolor||a;var g=b.nodelinewidth||c.linewidth;D.DrawFigures.createPointElement(e,x,y,d,a,true,f,g,true,true)};var Q=function(l,m){var n=function(a){var b=(E.animation?l:1)*(H.maxY-H.minY)*D._getFormatDiff(F.vValueType,F.vMinValue,a)/D._getFormatDiff(F.vValueType,F.vMinValue,F.vMaxValue);return b};var o=function(a){if(K){return(H.maxX-H.minX)*D._getFormatDiff(F.lValueType,F.lMinValue,a)/D._getFormatDiff(F.lValueType,F.lMinValue,F.lMaxValue)}else{if(F.multiple){return(H.maxX-H.minX)*a/(D.innerData[0].value.length-1)}else{return(H.maxX-H.minX)*a/(D.innerData.length-1)}}};var p=function(i,a,x,y,b,c,d,e,f,g,h){if(m>=1){var j={vvalue:d,lvalue:e,text:f,click:h.click,mouseover:h.mouseover,mouseleave:h.mouseleave,nodetype:h.nodetype,nodelength:h.nodelength,nodelinecolor:h.nodelinecolor,nodelinewidth:h.nodelinewidth,nodefillcolor:h.nodefillcolor};if(g!=null){j.vpercent=g}var k=new O(a,x,y,b,j,c);D.shapes.nodes.push(k);if(i>=0){D.coordinates.nodes[i][a]={centerX:x,centerY:y,length:b}}else{D.coordinates.nodes[a]={centerX:x,centerY:y,length:b}}}};if(F.multiple){for(var i=0,dataitem;dataitem=D.innerData[i];i++){var q=dataitem.text||'';var r=dataitem.color||N[i%N.length];var s=dataitem.nodetype;if(m>=1){D.coordinates.nodes[i]=[]}for(var k=0;k<dataitem.value.length;k++){t=dataitem.value[k];u=K?t[0]:k;v=K?t[1]:t;w=L?dataitem.percent[k]:null;z=H.minX+o(u);A=H.maxY-n(L?w:v);P(z,A,r,dataitem);p(i,k,z,A,dataitem.nodelength||M,r,v,u,q,w,dataitem)}}}else{for(var i=0;i<D.innerData.length;i++){var t=D.innerData[i];var q=t.text||'';var r=t.color||(E.node.colors&&E.node.colors.length>0?N[i%N.length]:null)||E.node.fillcolor||'#000000';var u=K?t.value[0]:i;var v=K?t.value[1]:t.value;var w=L?D.innerData[i].percent:null;var z=H.minX+o(u);var A=H.maxY-n(L?w:v);P(z,A,r,t);p(-1,i,z,A,t.nodelength||M,r,v,u,q,w,t)}}};var R=function(){var a,centerY=null;for(var i=0;i<D.shapes.nodes.length;i++){var b=D.shapes.nodes[i];P(b.centerX,b.centerY,b.color,b.data)}};var S=[];var T=function(){var p=function(x,y){var a=null;for(var i=D.shapes.nodes.length-1;i>=0;i--){var b=D.shapes.nodes[i];if(Math.sqrt(Math.pow(x-b.centerX,2)+Math.pow(y-b.centerY,2))<=b.nodelength/2){a=b;break}}return a};var q=function(x,y){var a=[];var b=0;if(y<=H.maxY&&y>=H.minY&&x>=H.minX&&x<=H.maxX){var c=0;var d=(H.maxX-H.minX)/(F.tuftCount-1);for(var i=1;i<F.tuftCount;i++){var e=H.minX+(i-1)*d;var f=H.minX+i*d;if(e<=x&&f>=x){if(Math.abs(e-x)<=Math.abs(f-x)){c=i-1;b=e}else{c=i;b=f}break}}for(var i=0,shape;shape=D.shapes.nodes[i];i++){if(shape.index==c){a.push(shape)}}}return{shapes:a,locX:b}};D.canvas.onclick=function(e){var e=window.event||e;var a=D._getMouseLoction(e);var b=p(a.X,a.Y);if(b){b.click(e)}};D.canvas.onmousemove=function(e){var e=window.event||e;var a=D._getMouseLoction(e);var b=F.lValueType||!F.multiple;var c=p(a.X,a.Y);if(D.tempData.currentMouseShape!=c){var d=D.tempData.currentMouseShape;if(d){var f=typeof d.data.mouseleave=='function'?d.data.mouseleave:(E.mouseleave||null);if(f){f(d.data,e)}}D.tempData.currentMouseShape=c;for(var i=0,d;d=D.shapes.nodes[i];i++){if(d!=c&&d.isHovered){d.isHovered=false;if(b&&d.hideTip){d.hideTip()}}}if(c){c.isHovered=true;if(E.mouseoverChangeCursor){D.canvas.style.cursor='pointer'}if(b){if(E.alignline.verticalline||E.alignline.horizontalline){D._createAssists(G);D._createScales(G);R()}if(E.alignline.verticalline){var g=E.alignline.linecolor||DChart.Const.Defaults.AlignLineColor;D.DrawFigures.createLine(c.centerX,H.minY,c.centerX,H.maxY+1,1,g)}if(E.alignline.horizontalline){var g=E.alignline.linecolor||DChart.Const.Defaults.AlignLineColor;D.DrawFigures.createLine(H.minX,c.centerY,H.maxX,c.centerY,1,g)}if(c.showTip&&b){c.showTip()}}var h=typeof c.data.mouseover=='function'?c.data.mouseover:(E.mouseover||null);if(h){h(c.data,e)}}else{if(E.mouseoverChangeCursor){D.canvas.style.cursor='auto'}if(b&&(E.alignline.verticalline||E.alignline.horizontalline)){D._createAssists(G);D._createScales(G);R()}}}if(!b){var j=q(a.X,a.Y);if(D.locX!=j.locX){D.locX=j.locX;if(E.tip.merge){for(var i=0;i<S.length;i++){if(S[i]){S[i].style.display='none'}}}else{for(var i=0,d;d=D.shapes.nodes[i];i++){if(d.hideTip){d.hideTip()}}}if(E.alignline.verticalline){D._createAssists(G);D._createScales(G);R()}if(j.shapes.length){if(E.alignline.verticalline){var g=E.alignline.linecolor||DChart.Const.Defaults.AlignLineColor;D.DrawFigures.createLine(j.locX,H.minY,j.locX,H.maxY+1,1,g)}if(E.tip.merge){if(j.shapes[0].showTip){var k=S[j.shapes[0].index];if(!k){var l=[];var m=0;for(var i=0,d;d=j.shapes[i];i++){l.push(d.data);m+=d.centerY}var n=j.locX+M+5;var o=m/j.shapes.length;k=D._createTip(E.tip.content.call(E,l,true),n,o);D._changeTip(k,null,o-k.clientHeight/2+10);if(n+k.clientWidth>H.maxX){D._changeTip(k,n-5-M-k.clientWidth)}S[j.shapes[0].index]=k}k.style.display='inline'}}else{for(var i=0,d;d=j.shapes[i];i++){if(d.showTip){d.showTip()}}}}}}}};D._startDrawAndAnimation(Q,T)},_spreadSkin:function(a,b){var c=DChart.Const.Skins;if(c[a]&&c[a].Points){var d=c[a].Points;b.node={};b.alignline={};b.node.linecolor=d.NodeLineColor||null;b.alignline.linecolor=d.AlignlineLineColor||null}},_getCheckOptions:function(){return{labelAxis:[['valueType','s'],['content','f'],['minvalue','n'],['maxvalue','n'],['interval','n'],['sort','b']],node:[['colors','ca'],['nodetype','s'],['linecolor','c'],['linewidth','n'],['length','n'],['fillcolor','c']],tip:[['merge','b']],alignline:[['verticalline','b'],['horizontalline','b'],['linecolor','c']],scale:[['drawvertical','b']]}}});